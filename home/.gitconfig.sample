[user]
  name = ccolorado
[color]
  ui = true
[merge]
  tool = vimdiff
  conflictstyle = diff3
  prompt = false
[core]
  editor = vim
  pager = diff-so-fancy | less --tabs=4 -RFX
  ; pager = delta
[diff]
  tool = vimdiff
  submodule = log
[push]
  default = simple
[pull]
  rebase = true
[alias]
  compb = "!f() { \
    if [[ $# == 0 ]]; then \
        branch1=$(git rev-parse --abbrev-ref HEAD); \
        branch2=master; \
    elif [[ $# == 1 ]]; then \
        branch1=$1; \
        branch2=master; \
    else \
        branch1=$1; \
        branch2=$2; \
    fi; \
    git log --oneline --graph --decorate --left-right --boundary --date-order $branch1...$branch2; \
  }; f"
  us = restore --staged
  cherry = cherry-pick
  rh = reset HEAD
  ci = commit -v
  co = checkout
  cl = clone
  po = push origin
  st = status -s
  df = diff
  lg = log --oneline --decorate --all --graph
  lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
  lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all

  dsf = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"
  subinst = submodule init
  subup = submodule update

  lg3 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%ad%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
  recentb = "!r() { refbranch=$1 count=$2; git for-each-ref --sort=-committerdate refs/heads --format='%(refname:short)|%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' --color=always --count=${count:-20} | while read line; do branch=$(echo \"$line\" | awk 'BEGIN { FS = \"|\" }; { print $1 }' | tr -d '*'); ahead=$(git rev-list --count \"${refbranch:-origin/master}..${branch}\"); behind=$(git rev-list --count \"${branch}..${refbranch:-origin/master}\"); colorline=$(echo \"$line\" | sed 's/^[^|]*|//'); echo \"$ahead|$behind|$colorline\" | awk -F'|' -vOFS='|' '{$5=substr($5,1,70)}1' ; done | ( echo \"ahead|behind||branch|lastcommit|message|author\\n\" && cat) | column -ts'|';}; r"


[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22
[color "diff"]
  meta = 11
  frag = magenta bold
  commit = yellow bold
  old = red bold
  new = green bold
  whitespace = red reverse

[interactive]
      diffFilter = delta --color-only --features=interactive

[delta]
      features = decorations

[delta "interactive"]
      keep-plus-minus-markers = false

[delta "decorations"]
  commit-decoration-style = blue ol
  commit-style = raw
  file-style = omit
  hunk-header-decoration-style = blue box
  hunk-header-file-style = red
  hunk-header-line-number-style = "#067a00"
  hunk-header-style = file line-number syntax




# Conditional path gitconfig example
# [includeIf "gitdir:~/root/of/the/directory/tree"]
#   path = ~/path/to/.gitconfig
