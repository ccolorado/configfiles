#examples from https://github.com/zircote/swagger-php/tree/master/Examples/swagger-spec/petstore-simple
snippet sgp "swagger property with doc"
/**
 * @SWG\Property(format="${4:int64}")
 * @var ${3:integer}
 */
${2:public} $${1};
endsnippet

snippet aff_store "Affiliates resource store method"

${5:sg_store${6}}
public function store(${1}Request $request)
{
    $model = $this->repository->create($request->all());
    if ($model) {
        ${2://}$this->insertLogs($request, $model);

        return AffiliatesResponse::getMessage(AffiliatesResponse::REQUEST_PROCESSED);
    }

    throw new AffiliatesBadResponseException;
}
endsnippet

snippet sg_store "swagger controller's store method block"
/**
 * ${1} record creation.
 *      - Create new ${8:$1} record.
 *      - Create new ${9:$1}Log record.
 *
 * @param ${10:$1}Request $request
 *
 * @return \Illuminate\Http\JsonResponse
 *
 * @throws \Prettus\Validator\Exceptions\ValidatorException
 * @throws \App\Exceptions\AffiliatesBadResponseException
 * @SWG\Post(
 *     path="/${2}/",
 *     description="${3:$1} record creation.
 *     Creates A new ${4:$1} record.",
 *     Creates A new ${5:$1}Log record.",
 *     operationId="${6:$2}.${6:store}",
 *     produces={"application/json"},
 *     tags={"${7:$2}"},
 *     @SWG\Response(
 *         response=200,
 *         description="Request processed"
 *     ),
 *     @SWG\Response(
 *         response=400,
 *         description="Access denied"
 *     )
 * )
 */
endsnippet

snippet aff_update "Affiliates resource store method"

${5:sg_update${6}}

public function update(${1}Request $request, $id)
{
    if ($this->repository->update($request->all(), $id)) {

        ${2://$this->insert${3:$1}Log($request, $this->repository->find($id));}
        ${4://$this->update${4:$1}DurationLog($request, $id);}

        return response()->json(AffiliatesResponse::getMessage(AffiliatesResponse::REQUEST_PROCESSED));
    }

    throw new AffiliatesBadResponseException($this->repository);
}
endsnippet

snippet sg_update "swagger controller's update method block"
/**
 * ${1} record modification.
 *      - Update ${4:$1} record.
 *
 * @return \Illuminate\Http\JsonResponse
 *
 * @SWG\Put(
 *     path="/api/v1/${2}/{id}",
 *     description="${5:$1} record modification.",
 *     operationId="${9:$2}.${3:update}",
 *     produces={"application/json"},
 *     tags={"${10:$2}"},
 *     @SWG\Parameter(
 *         description="ID of ${6:$1} record to update",
 *         format="int64",
 *         in="path",
 *         name="id",
 *         required=true,
 *         type="integer"
 *     ),
 *     @SWG\Response(
 *         response=200,
 *         description="Request processed"
 *     ),
 *     @SWG\Response(
 *         response=400,
 *         description="Access denied"
 *     ),
 *     @SWG\Response(
 *         response=401,
 *         description="Missing or invalid JSON payload supplied.",
 *     ),
 *     @SWG\Response(
 *         response=499,
 *         description="Unknown error."
 *     )
 * )
 */
endsnippet

snippet aff_show "Affiliates resource store method"

${2:sg_show${1}}

public function show($id)
{
    return $this->repository->find($id);
}

endsnippet

snippet sg_show "swagger controller's show method block"
/**
 * Retrieve a specific ${1} record.
 *
 * @param $id
 *
 * @return \Illuminate\Http\JsonResponse
 * @SWG\Get(
 *     path="/api/v1/${2}/{id}",
 *     description="Retrieve specific ${4:$1} record.",
 *     operationId="${5:$2}.show",
 *     produces={"application/json"},
 *     tags={"${6:$2}"},
 *     @SWG\Parameter(
 *         name="id",
 *         in="${7:path}",
 *         description="ID of ${8:$1} record to fetch",
 *         required=true,
 *         format="int64",
 *         type="integer"
 *     ),
 *     @SWG\Response(
 *         response=200,
 *         description="Request procesed"
 *     ),
 *     @SWG\Response(
 *         response=400,
 *         description="Access denied",
 *     ),
 *     @SWG\Response(
 *         response=404,
 *         description="Not Found",
 *     ),
 *     @SWG\Response(
 *         response=499,
 *         description="Unknown error"
 *     )
 * )
 */
endsnippet

snippet sg_index "Swagger controller's index method block"
/**
 * Retrieve all ${1} records.
 *
 * @return \Illuminate\Http\JsonResponse
 *
 * @SWG\Get(
 *     path="/api/v1/${2}",
 *     description="Retrieve all ${3:$1} records.",
 *     operationId="${6:$2}.index",
 *     produces={"application/json"},
 *     tags={"${7:$2}"},
 *     @SWG\Response(
 *         response=200,
 *         description="Request processed"
 *     ),
 *     @SWG\Response(
 *         response=499,
 *         description="Unknown error."
 *     )
 * )
 */
endsnippet

snippet aff_index "Affiliates resource index method"

${5:sg_index${6}}

public function index()
{
    return $this->repository->all();
}

endsnippet

snippet sg_destroy "Swagger controller's delete method doc block"

/**
 * ${1} record deletion.
 *      - Soft delete ${3:$1} record.
 *
 * @param $id
 * @return \Illuminate\Http\JsonResponse
 *
 * @throws \InvalidArgumentException
 * @throws \App\Exceptions\AffiliatesBadResponseException
 * @SWG\Delete(
 *     path="/api/v1/${2}/{id}",
 *     description="${4:$1} record deletion.
 *     Update value for ${9:$1} lastUpdatedBy, auditing purposes
 *     Soft delete ${5:$1} record.",
 *     operationId="${7:$2}.destroy",
 *     produces={"application/json"},
 *     tags={"${8:$2}"},
 *     @SWG\Parameter(
 *         description="ID of ${6:$1} record to delete",
 *         format="int64",
 *         in="path",
 *         name="id",
 *         required=true,
 *         type="integer"
 *     ),
 *     @SWG\Response(
 *         response=200,
 *         description="Request processed"
 *     ),
 *     @SWG\Response(
 *         response=404,
 *         description="Not Found"
 *     ),
 *     @SWG\Response(
 *         response=499,
 *         description="Unknown error."
 *     )
 * )
 */
endsnippet

snippet aff_destroy "Swagger controller's delete method doc block"

sg_destroy${5}

public function destroy($id)
{
    $model = $this->repository->find($id);
    $request = $model->first()->toArray();

    if ($this->repository->delete($id)) {
        ${3://$this->insert${1}Log($request, $model);}
        ${4://$this->update${2:$1}DurationLogEndDate($model);}

        return AffiliatesResponse::getMessage(AffiliatesResponse::REQUEST_PROCESSED);
    }

    throw new AffiliatesBadResponseException($this->repository);
}

endsnippet

snippet defauilt_elems "Generates classes boiler plate methods and properties"
/**
 * List of ${2:$1} objects with key/value of id => object.
 * @var array
 */
private $items = [];

/**
 * @return ${3:$1}
 */
public function getModel(){
    return new ${1}();
}
endsnippet

snippet sg_param "Swagger parameter documentation"
@SWG\Parameter(
*         name="${1}",
*         in="${2:formData}",
*         description="${3}",
*         required=${4:true},
*         type="${5:integer}",
*         format="${6:int64}"
*         ${8:, @SWG\Schema(ref="#/definitions/${9:classname}"),}
*     )${7:,}
endsnippet

snippet cest_test
public function ${1}Test(ApiTester $I)
{
	${2}
}
endsnippet

snippet sg_res "Swagger Response Documentation"
@SWG\Response(
*         response=${1:200},
*         description="${2:Request processed}"
*     )${3:,}
endsnippet

snippet aff_getby "Created a Get by method"

/**
 * Retrieve all ${1} records for a specific ${2}.
 *
 * @param $affiliate_id
 * @return \Illuminate\Http\JsonResponse
 * @SWG\Get(
 *     path="/api/v1/${3}/${4}/{id}",
 *     description="Retrieve all ${5:$1} records for a specific ${6:$2}.",
 *     operationId="${7:$3}.getBy${8:$2}",
 *     produces={"application/json"},
 *     tags={"${9:$3}"},
 *     @SWG\Parameter(
 *         description="ID of ${10:$2} record to fetch",
 *         format="int64",
 *         in="path",
 *         name="id",
 *         required=true,
 *         type="integer"
 *     ),
 *     @SWG\Response(
 *         response=200,
 *         description="Request processed"
 *     ),
 *     @SWG\Response(
 *         response=400,
 *         description="Access denied"
 *     ),
 *     @SWG\Response(
 *         response=404,
 *         description="Not Found"
 *     ),
 *     @SWG\Response(
 *         response=499,
 *         description="Unknown error."
 *     )
 * )
 */
public function getBy${11:$2}($var_id)
{
    return ${12:$2}::findOrFail( $var_id )->${13:$1}()->get();
}
endsnippet

snippet default_items "Generates classes boiler plate methods and properties"
/**
 * List of ${2:$1} objects with key/value of id => object.
 * @var array
 */
private $items = [];

/**
 * @return ${3:$1}
 */
public function getModel(){
    return new ${1}();
}
endsnippet

snippet kv "Adds a keyvalue item to an associative array"
'${1}' => ${3:"${2}"}${4:,}
endsnippet

snippet , "Adds array next constant value"
${1:${2:'${3}' ,${4}}}
endsnippet
