extends javascript

snippet itp "class property should be ecauls to variable"
it("$1 is $2", async function(){
  const _$1 = await this.$3.$1();
  _$1.should.be.equal($2);
});
endsnippet

snippet ite "new testcase should equals"
it("$1", async function(){
  const testAgainst = $3
  const $2 = $4
  ${2:testAgainst}.should.be.equal(this.testAgainst);
});
endsnippet

snippet dest "describe('X', async function() {Y});"
describe("$1", async function() {
  $2
});
endsnippet

# Import Component
snippet imrc "import React, {Component} from 'react';"
import React${1:, {Component} }from 'react';

endsnippet

# Component Class
snippet cc "Component class"
class ${1:MyComponent} extends Component {
	state = {}
	render() {
		return (
			<${2:div}>
				${0: $1 Placeholder}
			</$2>
		)
	}
}


export default $1;
endsnippet
# 
snippet sfc "Stateless Functional Component"
const ${1:MyComponent} = (props) => {
	return(
		<${2:<React.Fragment}>
      $0
		</$2>
	);
}


export default $1;
endsnippet

snippet arf "Arrow Function name = (arg) => { "
${1:myFunction} = (${2}) => {
	${0:${VISUAL}}
};
endsnippet

snippet iarf "iterating arrow funciton {name(arg => {"
{${1:subjec}(${2:item} => (
	${0:${VISUAL}}
))}
endsnippet
